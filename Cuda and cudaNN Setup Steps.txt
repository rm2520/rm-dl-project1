#Useful links
https://developer.nvidia.com/cuda-10.2-download-archive?target_os=Linux&target_arch=x86_64&target_distro=Ubuntu&target_version=1804&target_type=deblocal


https://medium.com/@patrickorcl/install-cuda-10-and-cudnn-on-ubuntu-18-b28b59bae279

https://phoenixnap.com/kb/how-to-install-anaconda-ubuntu-18-04-or-20-04

https://varhowto.com/install-pytorch-cuda-10-2/

##################################################################################


1. Setup Cuda 10.2 without setup nvidia drivers

wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-ubuntu1804.pin
sudo mv cuda-ubuntu1804.pin /etc/apt/preferences.d/cuda-repository-pin-600
wget http://developer.download.nvidia.com/compute/cuda/10.2/Prod/local_installers/cuda-repo-ubuntu1804-10-2-local-10.2.89-440.33.01_1.0-1_amd64.deb
sudo dpkg -i cuda-repo-ubuntu1804-10-2-local-10.2.89-440.33.01_1.0-1_amd64.deb
sudo apt-key add /var/cuda-repo-10-2-local-10.2.89-440.33.01/7fa2af80.pub
sudo apt-get update
sudo apt-get -y install cuda

#reboot

## to Confirm
nvidia-smi
Mon Sep 21 13:20:08 2020       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 440.33.01    Driver Version: 440.33.01    CUDA Version: 10.2     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|===============================+======================+======================|
|   0  Tesla T4            On   | 00000000:00:04.0 Off |                    0 |
| N/A   59C    P8    12W /  70W |      0MiB / 15109MiB |      0%      Default |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                       GPU Memory |
|  GPU       PID   Type   Process name                             Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+



2.Set the environment for cuda 10.2
nano ~/.bashrc
export PATH=/usr/local/cuda-10.2/bin${PATH:+:${PATH}}$ 
export LD_LIBRARY_PATH=/usr/local/cuda-10.2/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
source ~/.bashrc
sudo ldconfig



##################################################################################

3. download cudaNN 10.2 
https://developer.nvidia.com/rdp/cudnn-download

#FTP link
https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/

#Run the following commands

curl -O https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/libcudnn8_8.0.3.33-1+cuda10.2_amd64.deb

curl -O https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/libcudnn8-dev_8.0.3.33-1+cuda10.2_amd64.deb


##################################################################################

#or replacing step 3 (Setpup Google Cloud SDK for Windows 10) and run this commands (but this is slow FTP)

gcloud compute --project 'your-project-name' ssh --zone 'your-zone' 'your-instance-name'

setup environment ==> 1. gcloud compute --project 'high-empire-290114' ssh --zone 'us-central1-c' 'ubuntu18-cuda'

secure copy from your machine 1. ==> gcloud compute scp D:\cuda10.2_deb\libcudnn8_8.0.3.33-1+cuda10.2_amd64.deb ubuntu18-cuda:/tmp

secure copy from your machine 2. ==> gcloud compute scp D:\cuda10.2_deb\libcudnn8-dev_8.0.3.33-1+cuda10.2_amd64.deb ubuntu18-cuda:/tmp

secure copy from your machine 3.==> gcloud compute scp D:\cuda10.2_deb\libcudnn8-samples_8.0.3.33-1+cuda10.2_amd64.deb ubuntu18-cuda:/tmp

##################################################################################


4.Setup cudaNN 10.2

sudo dpkg -i libcudnn8_8.0.3.33-1+cuda10.2_amd64.deb
sudo dpkg -i libcudnn8-dev_8.0.3.33-1+cuda10.2_amd64.deb
sudo dpkg -i libcudnn8-samples_8.0.3.33-1+cuda10.2_amd64.deb

##Verify the cuDNN installation
cd /usr/src/cudnn_samples_v8/mnistCUDNN/
sudo make clean
sudo make
./mnistCUDNN
## you should see "Test passed!"

##################################################################################

5. Setup Conda
cd /tmp
curl -O "https://repo.anaconda.com/archive/Anaconda3-2020.07-Linux-x86_64.sh"

##Optional step to verify the downloaded file ##
sha256sum Anaconda3-2020.07-Linux-x86_64.sh

## Your system will display a series of letters and numbers:
38ce717758b95b3bd0b1797cc6ccfb76f29a90c25bdfa50ee45f11e583edfdbf  Anaconda3-2020.07-Linux-x86_64.sh

##### end of Optional step ####
bash Anaconda3-2020.07-Linux-x86_64.sh
###press [ENTER] for license agreement then [yes] for default installation location
source ~/.bashrc
## to Validate setup
conda info
##################################################################################

6. Setup pytorch 10.2 using Conda

conda install pytorch torchvision cudatoolkit=10.2 -c pytorch

##Verify if PyTorch is using CUDA 10.2
python
import torch
torch.cuda.is_available()
##################################################################################

7. Download the dataset and extract ir

example :Mars Dataset
https://www.kaggle.com/twoboysandhats/mars-motion-analysis-and-reidentification-set

#download it from your PC then copy the download link and use it with wget command

wget "https://storage.googleapis.com/kaggle-data-sets/276302/571403/bundle/archive.zip?X-Goog-Algorithm=GOOG4-RSA-SHA256&X-Goog-Credential=gcp-kaggle-com%40kaggle-161607.iam.gserviceaccount.com%2F20200925%2Fauto%2Fstorage%2Fgoog4_request&X-Goog-Date=20200925T084938Z&X-Goog-Expires=259199&X-Goog-SignedHeaders=host&X-Goog-Signature=9093928e3c21509c970374d1899d083845fcca636c177ad8a3db02ca50fdadae3d4037d7421acf99e93c52fb19def7dded9cc308fa1e82d3f1dc822defa8d4170415cf287bd666fe0a8741ad7eeb67d60ad3d56a7277b6342e11115e546faf21184711de1aba6780b6987db70e2de55aed7f6c59f6e8dd5da5b144561b6caed0565952c1bd03fb8290c15ec1239218a14d46d5733c341a0df3b759edc5867648241048cb697a60722e68c9acf0eea2190bcdfd1bf1f402a484c88409265f46718bece30b3a8fa995b3c7980602ce0a4d92791ba6f21a5a7d568b83edf140f869e5c99ee761849b3663b91133857009007f923369812ef676f96ef71aeb3619a8" > archive.zip

##WARNING: the download dataset file name might be some part of download link
## So rename this wrong name to archive.zip
mv <long_file_name> archive.zip
sudo apt install unzip
unzip archive.zip


##Fix dataset folder strucutrue
cd bbox_test/
mv * ..
cd ..
rm -rf bbox_test
cd ..
cd bbox_train/bbox_train/
mv * ..
cd ..
rm -rf bbox_train


#to test the code, go to Video-Person-ReID-master
mv data Data
##Run code direct
python ./main_video_person_reid.py --dataset=mars --train-batch=16 --num-instances=2
##Run using nohup
nohup python -u ./main_video_person_reid.py --dataset=mars --train-batch=16 --num-instances=2 > main_video_nohup.log &

tail -1000f main_video_nohup.log

PID	2351


#Download gdown.pl from then next link
https://github.com/circulosmeos/gdown.pl/blob/master/gdown.pl

#Down load Duke using gDown Perl script
sudo perl ./gdown.pl https://drive.google.com/file/d/1qIadJTpY3Wpvsubui2c4jIQTUhAWA1-y/edit DukeMTMC-VideoReID.zip

